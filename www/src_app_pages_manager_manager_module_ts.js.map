{"version":3,"file":"src_app_pages_manager_manager_module_ts.js","mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASxe,oBAAT,CAA8BF,GAA9B,EAAmCuC,IAAnC,EAAyCmc,QAAzC,EAAmD;EAC/C1e,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAO2sB,sBAAsB,CAAC3sB,GAAD,EAAMuC,IAAN,EAAYmc,QAAZ,CAA7B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2R,WAAT,CAAqBrwB,GAArB,EAA0B;EACtBA,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAOotB,aAAa,CAACptB,GAAD,CAApB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASswB,cAAT,CAAwBtwB,GAAxB,EAA6B0e,QAA7B,EAAuC;EACnC1e,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAOqtB,gBAAgB,CAACrtB,GAAD,EAAM0e,QAAN,CAAvB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6R,IAAT,CAAcvwB,GAAd,EAAmB8I,OAAnB,EAA4B;EACxB9I,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAOktB,MAAM,CAACltB,GAAD,EAAM8I,OAAN,CAAb;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0nB,OAAT,CAAiBxwB,GAAjB,EAAsB;EAClBA,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAO6sB,SAAS,CAAC7sB,GAAD,CAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBE,GAAxB,EAA6B;EACzBA,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAOstB,gBAAgB,CAACttB,GAAD,CAAvB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASywB,YAAT,CAAsBzwB,GAAtB,EAA2B;EACvBA,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAOutB,cAAc,CAACvtB,GAAD,CAArB;AACH;;AACD,SAASA,GAAT,CAAaguB,YAAb,EAA2BC,SAA3B,EAAsC;EAClCD,YAAY,GAAG1hB,kEAAkB,CAAC0hB,YAAD,CAAjC;EACA,OAAOD,KAAK,CAACC,YAAD,EAAeC,SAAf,CAAZ;AACH;AACD;AACA;AACA;;;AACA,SAASyC,SAAT,CAAmB1wB,GAAnB,EAAwBme,SAAxB,EAAmC;EAC/B,OAAOqP,WAAW,CAACxtB,GAAD,EAAMme,SAAN,CAAlB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASpe,UAAT,CAAoByuB,GAAG,GAAGziB,qDAAM,EAAhC,EAAoC4kB,SAApC,EAA+C;EAC3CnC,GAAG,GAAGliB,kEAAkB,CAACkiB,GAAD,CAAxB;;EACA,MAAMoC,eAAe,GAAG5kB,2DAAY,CAACwiB,GAAD,EAAM2B,YAAN,CAApC;;EACA,MAAMU,eAAe,GAAGD,eAAe,CAACpB,YAAhB,CAA6B;IACjDsB,UAAU,EAAEH;EADqC,CAA7B,CAAxB;EAGA,OAAOE,eAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,sBAAT,CAAgC9vB,OAAhC,EAAyCiO,IAAzC,EAA+Cmf,IAA/C,EAAqDvlB,OAAO,GAAG,EAA/D,EAAmE;EAC/DslB,wBAAwB,CAACntB,OAAD,EAAUiO,IAAV,EAAgBmf,IAAhB,EAAsBvlB,OAAtB,CAAxB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8Q,OAAT,CAAiB5Z,GAAjB,EAAsB8iB,oBAAtB,EAA4C;EACxC9iB,GAAG,GAAGsM,kEAAkB,CAACtM,GAAD,CAAxB;EACA,OAAOwsB,eAAe,CAACxsB,GAAD,EAAM8iB,oBAAN,CAAtB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkO,SAAT,CAAmBhxB,GAAnB,EAAwB8iB,oBAAxB,EAA8C;EAC1C,MAAM,IAAImO,KAAJ,CAAU,gDAAV,CAAN;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;EAAEC,kBAAkB,EAAEnvB;AAAtB,CAA5B,EAAyD;EACrD,MAAMusB,GAAG,GAAG2C,SAAS,CAACE,WAAV,CAAsB,KAAtB,EAA6B7B,YAA7B,EAAZ;EACA,MAAM8B,YAAY,GAAGH,SAAS,CAACE,WAAV,CAAsB,eAAtB,CAArB;EACA,MAAME,gBAAgB,GAAGJ,SAAS,CAACE,WAAV,CAAsB,oBAAtB,CAAzB;EACA,OAAO,IAAIxD,mBAAJ,CAAwBW,GAAxB,EAA6B8C,YAA7B,EAA2CC,gBAA3C,EAA6DtvB,GAA7D,EAAkEkK,sDAAlE,CAAP;AACH;;AACD,SAASqlB,eAAT,GAA2B;EACvBvlB,iEAAkB,CAAC,IAAIzF,0DAAJ,CAAc2pB,YAAd,EAA4Be,OAA5B,EAAqC;EAAS;EAA9C,EAA4DO,oBAA5D,CAAiF,IAAjF,CAAD,CAAlB,CADuB,CAEvB;;;EACAvlB,8DAAe,CAACf,IAAD,EAAO8E,OAAP,EAAgB,EAAhB,CAAf,CAHuB,CAIvB;;EACA/D,8DAAe,CAACf,IAAD,EAAO8E,OAAP,EAAgB,SAAhB,CAAf;AACH;;AACDuhB,eAAe","sources":["./src/app/core/services/image-uploader.service.ts","./src/app/pages/manager/manager-routing.module.ts","./src/app/pages/manager/manager.module.ts","./src/app/pages/manager/manager.page.ts","./src/app/shared/utilities/attachments.service.ts","./node_modules/@capacitor/camera/dist/esm/definitions.js","./node_modules/@capacitor/camera/dist/esm/index.js","./node_modules/@capacitor/filesystem/dist/esm/definitions.js","./node_modules/@capacitor/filesystem/dist/esm/index.js","./node_modules/@capacitor/storage/dist/esm/definitions.js","./node_modules/@capacitor/storage/dist/esm/index.js","./node_modules/@firebase/storage/dist/index.esm2017.js","./node_modules/firebase/storage/dist/index.esm.js"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Storage } from '@capacitor/storage';\nimport { UserPhoto } from '../models/images';\nimport { Filesystem } from '@capacitor/filesystem';\nimport { DOC_ORIENTATION, NgxImageCompressService} from 'ngx-image-compress';\nimport { ErrorHandlerService } from 'src/app/shared/utilities/error-handler.service';\nimport { getDownloadURL, getStorage, ref, uploadBytes, uploadBytesResumable, uploadString } from \"firebase/storage\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageUploaderService {\n  photo: UserPhoto[] = [];\n  data: any;\n  \n  imgResultBeforeCompress: string;\n  imgResultAfterCompress:string;\n  kbytes: number;\n\n  private PHOTO_STORAGE: string = 'userPhotos';\n\n  constructor(\n    private router: Router,\n    private error: ErrorHandlerService,\n    private imageCompress: NgxImageCompressService,\n  ) { }\n\n  uploadFile(folder: string, filename: string, file, progressState){\n    return new Promise((resolve,reject) => {\n      const storage = getStorage();\n      // Create a reference to 'folder/image.format'\n      const storageRef = ref(storage, folder + '/' + filename);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n      // Listen for state changes, errors, and completion of the upload.\n      uploadTask.on('state_changed',\n        (snapshot) => {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          // console.log('Upload is ' + progress + '% done');\n          progressState(progress);\n          switch (snapshot.state) {\n            case 'paused':\n              console.log('Upload is paused');\n              break;\n            case 'running':\n              // console.log('Upload is running');\n              break;\n          }\n        },\n        (error) => {\n          // A full list of error codes is available at\n          // https://firebase.google.com/docs/storage/web/handle-errors\n          switch (error.code) {\n            case 'storage/unauthorized':\n              // User doesn't have permission to access the object\n              reject({ message:this.error.handle(error), snapshot: null });\n              break;\n            case 'storage/canceled':\n              // User canceled the upload\n              reject({ message:this.error.handle(error), snapshot: null });\n              break;\n            case 'storage/unknown':\n              // Unknown error occurred, inspect error.serverResponse\n              reject({ message:this.error.handle(error), snapshot: null });\n              break;\n            default:\n              reject({ message:this.error.handle(error), snapshot: null });\n              break;\n          }\n        },\n        () => {\n          // Upload completed successfully, now we can get the download URL\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            console.log('File available at', downloadURL);\n            resolve({ message:'Archivo transferido', url: downloadURL })\n          });\n        }\n      );\n      uploadBytes(storageRef, file).then((snapshot) => {\n        console.log(snapshot);\n      });\n    });\n  }\n\n  uploadBase64(folder: string, filename: string, base64: string){\n    return new Promise((resolve,reject) => {\n      const storage = getStorage();\n      // Create a reference to 'folder/image.format'\n      const storageRef = ref(storage, folder + '/' + filename);\n      uploadString(storageRef, base64, 'data_url').then((snapshot) => {\n        console.log(snapshot);\n        resolve({ message:'Archivo transferido', snapshot })\n      })\n      .catch((error) => { reject({ message:this.error.handle(error), snapshot: null }); });\n    })\n  }\n\n  savePictures(photos: UserPhoto[], data, route, type, pdfName?:string){\n    photos[0].route = route; \n    photos[0].type = type;\n    photos[0].data = data;\n    if(pdfName)(photos[0].pdf);\n    // Cache all photo data for future retrieval\n    Storage.set({ key: this.PHOTO_STORAGE,\n      value: JSON.stringify(photos)})\n    // .then(done => console.log('saved'));\n  }\n\n  // Delete picture by removing it from reference data and the filesystem\n  public async deletePicture() {\n    this.photo = [];\n    this.data = undefined;\n    Storage.set({ key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photo)})\n    .then(done => console.log('clean photos'));\n  }\n\n  public loadSaved() {\n    return new Promise(async resolve => {\n      try {\n        // Retrieve cached photo array data\n        const photoList = await Storage.get({ key: this.PHOTO_STORAGE });\n        this.photo = photoList ? JSON.parse(photoList.value) : [];\n        if(this.photo?.length){\n          if(this.photo[0].route !== this.router.url){\n            if(this.photo[0].route  === ''){  this.deletePicture(); resolve([]); \n            } else { this.photo[0].deploy = false; resolve(this.photo); }\n          }else{\n            this.photo[0].deploy = true;\n            for(let i = 0; i < this.photo.length; i++) {\n              if (this.photo[0].type == 'Filesystem'){\n                let contents = await Filesystem.readFile({path: this.photo[i].webPath});\n                this.photo[i].webPath = 'data:image/jpeg;base64,' + contents.data;\n              }\n              this.photo[i].file =  await this.generateBlob(this.photo[i].webPath);\n            }\n            resolve(this.photo);\n            setTimeout(() => { this.deletePicture(); }, 2000);\n          }\n        } else { resolve([]); }\n      } catch (error) { console.log(error);resolve([]);}\n    });\n  }\n\n  async dataURLtoFile(base64, filename) {\n    // tslint:disable-next-line: one-variable-per-declaration\n    const arr = base64.split(',');\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type: mime});\n  }\n\n  getBase64Size(base64){\n    return new Promise((resolve) => {\n      this.calculateImageSize(base64).then(size => { resolve(size); })\n      .catch((e) => { \n        console.error(e); \n        this.error.handle(e);\n        resolve(0);\n      });\n    });\n  }\n\n  async calculateImageSize(base64String) {\n    let padding;\n    let inBytes;\n    let base64StringLength;\n    if (base64String.endsWith('==')) { padding = 2; }\n    else if (base64String.endsWith('=')) { padding = 1; }\n    else { padding = 0; }\n    base64StringLength = base64String.length;\n    inBytes = (base64StringLength / 4) * 3 - padding;\n    this.kbytes = inBytes / 1000;\n    return this.kbytes;\n  }\n\n  reduceImageSize(file){\n    return new Promise((resolve,error) => {\n      let oriented: DOC_ORIENTATION = -2\n      this.imgResultBeforeCompress = file;\n      console.warn('Size in bytes was:', this.imageCompress.byteCount(file));\n      try {\n        this.imageCompress.compressFile(file, oriented, 50, 50)\n        .then(result => {\n          this.imgResultAfterCompress = result;\n          resolve(result)\n        });\n      } catch (e){\n        console.error(e)\n        error(e)\n      }\n    })\n  }\n\n  generateBlob(base64Data): Promise<File> {\n    return new Promise((resolve, error) => {\n      this.dataURLtoFile(base64Data, new Date().toString() + '_mobileImg').then(savedImageFile => {\n        const size = savedImageFile.size;\n        if (size > 1048576) {\n          this.reduceImageSize(base64Data).then(newSize => {\n            this.dataURLtoFile(newSize, new Date().toString() + '_mobileImg').then(compressImageFile => {\n              resolve(compressImageFile);\n            }).catch(e => {console.log(e); error(e)});\n          }).catch(e => {console.log(e); error(e)});\n        }else{\n          resolve(savedImageFile);\n        }\n      }).catch(e => {console.log(e); error(e)});\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagerPage } from './manager.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'profile',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    component: ManagerPage,\n    children: [\n      {\n        path: 'home',\n        loadChildren: () => import('./home-manager/home-manager.module').then( m => m.HomeManagerPageModule),\n        data: {\n          viewName: 'Home'\n        }\n      },\n      {\n        path: 'profile',\n        loadChildren: () => import('./profile-manager/profile-manager.module').then( m => m.ProfileManagerPageModule),\n        data: {\n          viewName: 'Home'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManagerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManagerPageRoutingModule } from './manager-routing.module';\n\nimport { ManagerPage } from './manager.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ManagerPageRoutingModule\n  ],\n  declarations: [ ManagerPage]\n})\nexport class ManagerPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AttachmentsService } from 'src/app/shared/utilities/attachments.service';\n\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.page.html',\n  styleUrls: ['./manager.page.scss'],\n})\nexport class ManagerPage implements OnInit {\n\n  constructor(\n    private router: Router,\n    private images: AttachmentsService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async checkSavedImages(){\n    this.images.loadSaved().then((photos: any) => {\n      if(photos.length){ setTimeout(() => {\n          this.router.navigateByUrl(photos[0].route.substring(1)); \n        }, 1500);\n      }else{\n        this.router.navigateByUrl('/manager/home');\n      }\n    }).catch(e => {\n      console.log(e);\n      this.router.navigateByUrl('/manager/home');\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Capacitor } from '@capacitor/core';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Chooser } from '@awesome-cordova-plugins/chooser/ngx';\nimport { Filesystem, ReadFileResult } from '@capacitor/filesystem';\nimport { Camera, CameraDirection, ImageOptions, CameraResultType, CameraSource, GalleryImageOptions, GalleryPhotos } from '@capacitor/camera';\nimport { attachmentOptions, UserPhoto } from 'src/app/core/models/images';\nimport { AlertsService } from './alerts';\nimport { ImageUploaderService } from 'src/app/core/services/image-uploader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentsService {\n  imgHeight = undefined;\n  imgWidth = undefined;\n  currentRoute: string = '';\n  image: string;\n  base64Str: any;\n  photo: UserPhoto[] = [];\n  data: any;\n  limit = 1;\n  DemoPDF = 'data:application/pdf;base64,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686t5r5I8UmpS5lPDUo9lLqYFpXWno5Lj08/wZPhpfL6MlQzVmcMZRpmFmaOrrJftWfVLN+f35QFZS3P6hZQRT9TA0I94RbhWLZTdk32m5zInOOrpVfzVg/kGuRuz51c47Xm67Wotay1vXnqeZvyxta5rqtfD61PWN+7QXNDwYaJjd4bD28ibErd9EO+WX5Z/qvNUZt7ClQKNhaMb/He0looUcgvvL3VYWvdNtQ27rbB7Zbbq7Z/LGIXXSk2K64ofl/CKrnylflXlV8t7kjcMVhqU7p/J2Ynb+fILuddh8uky9aUje8O3N1ZTi8vKn+1Z+WeyxVWFXV7CXuFe0crAyq7q7Sqdla9r06uHq5xq2mvVa7dXju/j73vxn6X/W11KnXFde8OcA/cqfeu72zQaag4iDmYffBJY2Rj/9eMr5ubFJuKmz4c4h0aPRx6uK/Ztrm5RbmltBVuFbZOH4k7cv0bj2+624zb6ttp7cVHwVHh0affxn87csz/WO9xxvG277S/q+2gdBR1Qp25nbNdyV2j3THdQyf8TvT2OPR0fG/y/aGT6idrTsmeKj1NOF1wevHMmjNzZzPPzpxLOjfeu7L3/vno87f6QvoGL/hfuHTR6+L5ftf+M5ccL528bH/5xBXGla6rNlc7B6wHOn6w/qFj0Gaw85rtte7rdtd7hpYMnb7hfOPcTY+bF2/53ro6vHR4aCRi5M7tuNujd9h3pu6m3X1xL/vewv2ND9APih5KPax4pPyo4Uf9H9tHbUZPjXmMDTwOe3x/nDX+7Kesn95PFDwhP6mYVJtsnrKYOjntNX396bKnE88yny3MFP4s/XPtc73n3/3i8svAbPTsxAv+i8VfS14qvDz0yupV71zw3KPX6a8X5oveKLw5/Jbxtv9d1LvJhZz32PeVH/Q/9Hz0//hgMX1x8V/3hPP7y2IJQQplbmRzdHJlYW0KZW5kb2JqCjMgMCBvYmoKPDwKPj4gZW5kb2JqCjkgMCBvYmoKPDwKL0Jhc2VGb250IC9IZWx2ZXRpY2EgCi9FbmNvZGluZyAvV2luQW5zaUVuY29kaW5nIAovU3VidHlwZSAvVHlwZTEgCi9UeXBlIC9Gb250IAovTmFtZSAvSGVsdiAKPj4gZW5kb2JqCjEwIDAgb2JqCjw8Ci9DcmVhdGlvbkRhdGUgKEQ6MjAwODA2MTExNjU2MDMpIAovTW9kRGF0ZSAoRDoyMDA4MDYxMTE2NTYwMykgCi9Qcm9kdWNlciAoSWJleCBQREYgQ3JlYXRvciA0LjMuNi40LzUwMjUgWy5ORVQgMi4wXSkgCj4+IGVuZG9iagp4cmVmCjAgMTEKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwNjE2IDAwMDAwIG4gCjAwMDAwMDA1NTYgMDAwMDAgbiAKMDAwMDAwMzQyNCAwMDAwMCBuIAowMDAwMDAwNzA2IDAwMDAwIG4gCjAwMDAwMDA3NDEgMDAwMDAgbiAKMDAwMDAwMDIxNSAwMDAwMCBuIAowMDAwMDAwNDgwIDAwMDAwIG4gCjAwMDAwMDAwMjAgMDAwMDAgbiAKMDAwMDAwMzQ0NSAwMDAwMCBuIAowMDAwMDAzNTU5IDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgMTEgCi9JbmZvIDEwIDAgUiAgCi9Sb290IDEgMCBSIAo+PgpzdGFydHhyZWYKMzY5OAolJUVPRgo='\n\n  // Buttons Available\n  CameraButton = {\n    text: 'Camera',\n    icon: 'camera-outline',\n    handler: () => {\n      return new Promise((resolve,error) => {\n        this.getCameraImage().then((image: UserPhoto) => {\n          this.photo.push(image);\n          resolve(true);\n        }).catch(e => { error(e);});\n      });\n    }\n  }\n\n  GalleryButton = {\n    text: 'Gallery',\n    icon: 'image-outline',\n    handler: () => {\n      return new Promise((resolve,error) => {\n        this.getGalleryImage().then((image: UserPhoto[]) => {\n          this.photo = image;\n          resolve(true);\n        }).catch(e => { error(e);});\n      });\n    }\n  }\n\n  PDFButton = {\n    text: 'PDF',\n    icon: 'document-attach-outline',\n    handler: () => {\n      return new Promise((resolve,error) => {\n        this.pickPdf().then(async (PDF: UserPhoto) => {\n          if (PDF.webPath === 'false'){\n            error('false');\n          }else{\n            this.photo.push(PDF);\n            resolve(true);\n          }\n        }).catch(e => { error(e);});\n      });\n    }\n  }\n\n  CancelButton = {\n    text: 'Cancel',\n    icon: 'close',\n    role: 'cancel',\n    handler: () => {\n      this.actionSheetController.dismiss();\n      return false;\n    }\n  }\n\n  cameraButtons = [ this.CameraButton, this.GalleryButton, this.CancelButton ]\n  pdfButtons = [ this.CameraButton, this.GalleryButton, this.PDFButton, this.CancelButton ]\n\n  constructor(\n    private router: Router,\n    private documents: Chooser,\n    private alerts: AlertsService,\n    private processor: ImageUploaderService,\n    public actionSheetController: ActionSheetController,\n  ){}\n\n  public async loadSaved(){ return await this.processor.loadSaved()}\n  public async deletePicture(){ return await this.processor.deletePicture()}\n\n  async presentImageOptions(options: attachmentOptions): Promise<any> {\n    this.processor.deletePicture();\n    this.imgHeight = options.height ? options.height : undefined;\n    this.imgWidth = options.width ? options.width : undefined;\n    this.limit = options.limit ? options.limit : 1;\n    this.data = options.data ? options.data : null;\n    this.currentRoute = this.router.url;\n    this.photo = []; let buttons = [];\n\n    if (options.pdf){ buttons = this.pdfButtons;} \n    else{ buttons = this.cameraButtons; }\n\n    const actionSheet = await this.actionSheetController\n    .create({ header: 'Take image from:', buttons:  buttons });\n    await actionSheet.present();\n    return actionSheet.onDidDismiss().then( data => {\n      this.imgHeight = undefined;\n      this.imgWidth = undefined;\n      this.currentRoute = '';\n      return this.photo;\n    });\n  }\n\n  public async getCameraImage() {\n    return new Promise(async (resolve,error) => {\n      const OPTIONS: ImageOptions = {\n        source: CameraSource.Camera, direction: CameraDirection.Rear,\n        resultType : CameraResultType.Base64, quality: 100,\n        saveToGallery: true, allowEditing: true,  promptLabelCancel: 'Cancel'\n      };\n      Camera.getPhoto(OPTIONS).then(capturedPhoto => {\n        const img = 'data:image/jpeg;base64,' + capturedPhoto.base64String;\n        this.processor.savePictures([{file: null, webPath: img}], this.data, this.currentRoute, 'Base64');\n        this.processor.generateBlob(img).then(savedImageFile => {\n          resolve({file: savedImageFile, webPath: img});\n        });\n      }).catch(e => error(e));\n    });\n  }\n\n  public async getGalleryImage() {\n    return new Promise(async (resolve,error) => {\n      const OPTIONS: GalleryImageOptions = { limit: this.limit };\n      Camera.pickImages(OPTIONS).then(async (capturedPhotos: GalleryPhotos) => {\n        let photos = [];\n        this.saveGallery(capturedPhotos.photos);\n        for(let image of capturedPhotos.photos){\n          let contents: ReadFileResult = await Filesystem.readFile({path: image.path});\n          const img = 'data:image/jpeg;base64,' + contents.data;\n          await this.processor.generateBlob(img).then(savedImageFile => {\n            photos.push({file: savedImageFile, webPath: img});\n          });\n        }\n        resolve(photos);\n      }).catch(e => { console.log(e); error(e) });\n    });\n  }\n\n  pickPdf(){\n    return new Promise(async (resolve) => {\n      if(Capacitor.getPlatform() === 'web'){\n\n      this.alerts.AlertConfirm('PDF', 'Upload pdf?').then(answer => {\n        if (answer){\n          this.processor.savePictures([{file: null, webPath: this.DemoPDF, pdf: 'TestPDF.pdf'}], this.data, this.currentRoute, 'PDF');\n          this.processor.generateBlob(this.DemoPDF).then(savedImageFile => {\n            resolve({file: savedImageFile, webPath: this.DemoPDF, type: 'PDF', pdf: 'TestPDF.pdf'});\n          }).catch((e) => { console.log('generateBlob'); console.error(e); resolve({webPath:false});  });\n        } else {\n          console.log('cancelPDF'); resolve({webPath:false});\n        }\n\n      })\n      } else {\n        this.documents.getFile('application/pdf').then(file => {\n          const base64String = file.dataURI;\n          this.processor.savePictures([{file: null, webPath: file.dataURI, pdf: file.name}], this.data, this.currentRoute, 'PDF');\n          this.processor.generateBlob(base64String).then(savedImageFile => {\n            resolve({file: savedImageFile, webPath: base64String, type: 'PDF', pdf: file.name});\n          }).catch((e) => { console.log('generateBlob'); console.error(e); resolve({webPath:null});  });\n        }).catch((error: any) => {console.log('getFile');console.error(error);resolve({webPath:false});});\n      }\n    })\n  }\n\n  saveGallery(photoList: any[]){\n    let photos: UserPhoto[] = [];\n    photoList.forEach(image => { photos.push({file: null, webPath: image.path}); })\n    this.processor.savePictures(photos, this.data, this.currentRoute, 'Filesystem');\n  }\n\n}\n","export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo fron the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n","export var Directory;\n(function (Directory) {\n    /**\n     * The Documents directory\n     * On iOS it's the app's documents directory.\n     * Use this directory to store user-generated content.\n     * On Android it's the Public Documents folder, so it's accessible from other apps.\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\n     * in the `AndroidManifest.xml`.\n     * It's not accesible on Android 11 or newer.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Documents\"] = \"DOCUMENTS\";\n    /**\n     * The Data directory\n     * On iOS it will use the Documents directory.\n     * On Android it's the directory holding application files.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Data\"] = \"DATA\";\n    /**\n     * The Library directory\n     * On iOS it will use the Library directory.\n     * On Android it's the directory holding application files.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.1.0\n     */\n    Directory[\"Library\"] = \"LIBRARY\";\n    /**\n     * The Cache directory\n     * Can be deleted in cases of low memory, so use this directory to write app-specific files\n     * that your app can re-create easily.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Cache\"] = \"CACHE\";\n    /**\n     * The external directory\n     * On iOS it will use the Documents directory\n     * On Android it's the directory on the primary shared/external\n     * storage device where the application can place persistent files it owns.\n     * These files are internal to the applications, and not typically visible\n     * to the user as media.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"External\"] = \"EXTERNAL\";\n    /**\n     * The external storage directory\n     * On iOS it will use the Documents directory\n     * On Android it's the primary shared/external storage directory.\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\n     * in the `AndroidManifest.xml`.\n     * It's not accesible on Android 11 or newer.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"ExternalStorage\"] = \"EXTERNAL_STORAGE\";\n})(Directory || (Directory = {}));\nexport var Encoding;\n(function (Encoding) {\n    /**\n     * Eight-bit UCS Transformation Format\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"UTF8\"] = \"utf8\";\n    /**\n     * Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the\n     * Unicode character set\n     * This encoding is only supported on Android.\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"ASCII\"] = \"ascii\";\n    /**\n     * Sixteen-bit UCS Transformation Format, byte order identified by an\n     * optional byte-order mark\n     * This encoding is only supported on Android.\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"UTF16\"] = \"utf16\";\n})(Encoding || (Encoding = {}));\n/**\n * @deprecated Use `Directory`.\n * @since 1.0.0\n */\nexport const FilesystemDirectory = Directory;\n/**\n * @deprecated Use `Encoding`.\n * @since 1.0.0\n */\nexport const FilesystemEncoding = Encoding;\n","import { registerPlugin } from '@capacitor/core';\nconst Filesystem = registerPlugin('Filesystem', {\n    web: () => import('./web').then(m => new m.FilesystemWeb()),\n});\nexport * from './definitions';\nexport { Filesystem };\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst Storage = registerPlugin('Storage', {\n    web: () => import('./web').then(m => new m.StorageWeb()),\n});\nexport * from './definitions';\nexport { Storage };\n","import { getApp, _getProvider, _registerComponent, registerVersion, SDK_VERSION } from '@firebase/app';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nconst DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nconst CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nconst DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nconst DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nclass StorageError extends FirebaseError {\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    constructor(code, message) {\r\n        super(prependCode(code), `Firebase Storage: ${message} (${prependCode(code)})`);\r\n        /**\r\n         * Stores custom error data unque to StorageError.\r\n         */\r\n        this.customData = { serverResponse: null };\r\n        this._baseMessage = this.message;\r\n        // Without this, `instanceof StorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(this, StorageError.prototype);\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    _codeEquals(code) {\r\n        return prependCode(code) === this.code;\r\n    }\r\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\r\n    get serverResponse() {\r\n        return this.customData.serverResponse;\r\n    }\r\n    set serverResponse(serverResponse) {\r\n        this.customData.serverResponse = serverResponse;\r\n        if (this.customData.serverResponse) {\r\n            this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\r\n        }\r\n        else {\r\n            this.message = this._baseMessage;\r\n        }\r\n    }\r\n}\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    const message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new StorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new StorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new StorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    const message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new StorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new StorageError(\"unauthorized-app\" /* UNAUTHORIZED_APP */, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new StorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new StorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new StorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new StorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new StorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new StorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new StorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new StorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new StorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction invalidArgument(message) {\r\n    return new StorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new StorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new StorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new StorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new StorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nclass Location {\r\n    constructor(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    get path() {\r\n        return this.path_;\r\n    }\r\n    get isRoot() {\r\n        return this.path.length === 0;\r\n    }\r\n    fullServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    }\r\n    bucketOnlyServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    }\r\n    static makeFromBucketSpec(bucketString, host) {\r\n        let bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    }\r\n    static makeFromUrl(url, host) {\r\n        let location = null;\r\n        const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        const gsPath = '(/(.*))?$';\r\n        const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        const gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        const version = 'v[A-Za-z0-9_]+';\r\n        const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        const firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        const firebaseStorageRegExp = new RegExp(`^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`, 'i');\r\n        const firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        const cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        const cloudStoragePath = '([^?#]*)';\r\n        const cloudStorageRegExp = new RegExp(`^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`, 'i');\r\n        const cloudStorageIndices = { bucket: 1, path: 2 };\r\n        const groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const group = groups[i];\r\n            const captures = group.regex.exec(url);\r\n            if (captures) {\r\n                const bucketValue = captures[group.indices.bucket];\r\n                let pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    }\r\n}\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nclass FailRequest {\r\n    constructor(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(_appDelete = false) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    let waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let retryTimeoutId = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let globalTimeoutId = null;\r\n    let hitTimeout = false;\r\n    let cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    let triggeredCallback = false;\r\n    function triggerCallback(...args) {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        retryTimeoutId = setTimeout(() => {\r\n            retryTimeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function clearGlobalTimeout() {\r\n        if (globalTimeoutId) {\r\n            clearTimeout(globalTimeoutId);\r\n        }\r\n    }\r\n    function handler(success, ...args) {\r\n        if (triggeredCallback) {\r\n            clearGlobalTimeout();\r\n            return;\r\n        }\r\n        if (success) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        const mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        let waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    let stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        clearGlobalTimeout();\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (retryTimeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(retryTimeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    globalTimeoutId = setTimeout(() => {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host, protocol) {\r\n    let origin = host;\r\n    if (protocol == null) {\r\n        origin = `https://${host}`;\r\n    }\r\n    return `${protocol}://${origin}/v0${urlPart}`;\r\n}\r\nfunction makeQueryString(params) {\r\n    const encode = encodeURIComponent;\r\n    let queryPart = '?';\r\n    for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            const nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */\r\nclass NetworkRequest {\r\n    constructor(url_, method_, headers_, body_, successCodes_, additionalRetryCodes_, callback_, errorCallback_, timeout_, progressCallback_, connectionFactory_) {\r\n        this.url_ = url_;\r\n        this.method_ = method_;\r\n        this.headers_ = headers_;\r\n        this.body_ = body_;\r\n        this.successCodes_ = successCodes_;\r\n        this.additionalRetryCodes_ = additionalRetryCodes_;\r\n        this.callback_ = callback_;\r\n        this.errorCallback_ = errorCallback_;\r\n        this.timeout_ = timeout_;\r\n        this.progressCallback_ = progressCallback_;\r\n        this.connectionFactory_ = connectionFactory_;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.promise_ = new Promise((resolve, reject) => {\r\n            this.resolve_ = resolve;\r\n            this.reject_ = reject;\r\n            this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    start_() {\r\n        const doTheRequest = (backoffCallback, canceled) => {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            const connection = this.connectionFactory_();\r\n            this.pendingConnection_ = connection;\r\n            const progressListener = progressEvent => {\r\n                const loaded = progressEvent.loaded;\r\n                const total = progressEvent.lengthComputable\r\n                    ? progressEvent.total\r\n                    : -1;\r\n                if (this.progressCallback_ !== null) {\r\n                    this.progressCallback_(loaded, total);\r\n                }\r\n            };\r\n            if (this.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(this.url_, this.method_, this.body_, this.headers_)\r\n                .then(() => {\r\n                if (this.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                this.pendingConnection_ = null;\r\n                const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                const status = connection.getStatus();\r\n                if (!hitServer || this.isRetryStatusCode_(status)) {\r\n                    const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                const successCode = this.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        };\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        const backoffDone = (requestWentThrough, status) => {\r\n            const resolve = this.resolve_;\r\n            const reject = this.reject_;\r\n            const connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    const result = this.callback_(connection, connection.getResponse());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    const err = unknown();\r\n                    err.serverResponse = connection.getErrorText();\r\n                    if (this.errorCallback_) {\r\n                        reject(this.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        const err = this.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        const err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    }\r\n    isRetryStatusCode_(status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        const isFiveHundredCode = status >= 500 && status < 600;\r\n        const extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        const isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    }\r\n}\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nclass RequestEndStatus {\r\n    constructor(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n}\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, requestFactory, firebaseVersion) {\r\n    const queryPart = makeQueryString(requestInfo.urlParams);\r\n    const url = requestInfo.url + queryPart;\r\n    const headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, requestFactory);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob$1(...args) {\r\n    const BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        const bb = new BlobBuilder();\r\n        for (let i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new StorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nconst StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nclass StringData {\r\n    constructor(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    const b = [];\r\n    for (let i = 0; i < value.length; i++) {\r\n        let c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    const valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        const hi = c;\r\n                        const lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    let decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            const hasMinus = value.indexOf('-') !== -1;\r\n            const hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                const invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            const hasPlus = value.indexOf('+') !== -1;\r\n            const hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                const invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    let bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    const array = new Uint8Array(bytes.length);\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nclass DataURLParts {\r\n    constructor(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        const matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        const middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n}\r\nfunction dataURLBytes_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    const longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nclass FbsBlob {\r\n    constructor(data, elideCopy) {\r\n        let size = 0;\r\n        let blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    size() {\r\n        return this.size_;\r\n    }\r\n    type() {\r\n        return this.type_;\r\n    }\r\n    slice(startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            const realBlob = this.data_;\r\n            const sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            const slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    }\r\n    static getBlob(...args) {\r\n        if (isNativeBlobDefined()) {\r\n            const blobby = args.map((val) => {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob$1.apply(null, blobby));\r\n        }\r\n        else {\r\n            const uint8Arrays = args.map((val) => {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            let finalLength = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                finalLength += array.byteLength;\r\n            });\r\n            const merged = new Uint8Array(finalLength);\r\n            let index = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                for (let i = 0; i < array.length; i++) {\r\n                    merged[index++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged, true);\r\n        }\r\n    }\r\n    uploadData() {\r\n        return this.data_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    let obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    const index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    const newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    const canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(component => component.length > 0)\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    const index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nclass Mapping {\r\n    constructor(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n}\r\nlet mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    const mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    const nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    const sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    const metadata = {};\r\n    metadata['type'] = 'file';\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host, protocol) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    const tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    const encode = encodeURIComponent;\r\n    const tokensList = tokens.split(',');\r\n    const urls = tokensList.map((token) => {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        const base = makeUrl(urlPart, host, protocol);\r\n        const queryString = makeQueryString({\r\n            alt: 'media',\r\n            token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    const resource = {};\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PREFIXES_KEY = 'prefixes';\r\nconst ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    const listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (const path of resource[PREFIXES_KEY]) {\r\n            const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            const reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (const item of resource[ITEMS_KEY]) {\r\n            const reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\n/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */\r\nclass RequestInfo {\r\n    constructor(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        const listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host, service._protocol);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        let newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getErrorText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    const shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        let newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    const urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getBytes$1(service, location, maxDownloadSizeBytes) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, (_, data) => data, timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    if (maxDownloadSizeBytes !== undefined) {\r\n        requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\r\n        requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\r\n    }\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'PATCH';\r\n    const body = toResourceString(metadata, mappings);\r\n    const headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'DELETE';\r\n    const timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    const metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        let str = '';\r\n        for (let i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    const boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    const metadata_ = metadataForUpload_(location, blob, metadata);\r\n    const metadataString = toResourceString(metadata_, mappings);\r\n    const preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    const postBlobPart = '\\r\\n--' + boundary + '--';\r\n    const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    const urlParams = { name: metadata_['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nclass ResumableUploadStatus {\r\n    constructor(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n}\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    let status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    const allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    const urlParams = { name: metadataForUpload['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    const body = toResourceString(metadataForUpload, mappings);\r\n    const timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        let url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    const headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        const status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        let sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        const size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nconst RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    const status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    const bytesLeft = status_.total - status_.current;\r\n    let bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    const startByte = status_.current;\r\n    const endByte = startByte + bytesToUpload;\r\n    const uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    const headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': `${status_.current}`\r\n    };\r\n    const body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        const newCurrent = status_.current + bytesToUpload;\r\n        const size = blob.size();\r\n        let metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */\r\nconst TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n// type keys = keyof TaskState\r\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */\r\nconst TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Observer {\r\n    constructor(nextOrObserver, error, complete) {\r\n        const asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error !== null && error !== void 0 ? error : undefined;\r\n            this.complete = complete !== null && complete !== void 0 ? complete : undefined;\r\n        }\r\n        else {\r\n            const observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return (...argsToForward) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(() => f(...argsToForward));\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** An override for the text-based Connection. Used in tests. */\r\nlet textFactoryOverride = null;\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nclass XhrConnection {\r\n    constructor() {\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.initXhr();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(resolve => {\r\n            this.xhr_.addEventListener('abort', () => {\r\n                this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('error', () => {\r\n                this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('load', () => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    send(url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (const key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    }\r\n    getErrorCode() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    }\r\n    getStatus() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    }\r\n    getResponse() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponse() before sending');\r\n        }\r\n        return this.xhr_.response;\r\n    }\r\n    getErrorText() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorText() before sending');\r\n        }\r\n        return this.xhr_.statusText;\r\n    }\r\n    /** Aborts the request. */\r\n    abort() {\r\n        this.xhr_.abort();\r\n    }\r\n    getResponseHeader(header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    }\r\n    addUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    }\r\n    removeUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    }\r\n}\r\nclass XhrTextConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'text';\r\n    }\r\n}\r\nfunction newTextConnection() {\r\n    return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\r\n}\r\nclass XhrBytesConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'arraybuffer';\r\n    }\r\n}\r\nfunction newBytesConnection() {\r\n    return new XhrBytesConnection();\r\n}\r\nclass XhrBlobConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'blob';\r\n    }\r\n}\r\nfunction newBlobConnection() {\r\n    return new XhrBlobConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nclass UploadTask {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    constructor(ref, blob, metadata = null) {\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = error => {\r\n            this._request = undefined;\r\n            this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                this._needToFetchStatus = true;\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = error => {\r\n            this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n            this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, () => { });\r\n    }\r\n    _makeProgressCallback() {\r\n        const sizeBefore = this._transferred;\r\n        return loaded => this._updateProgress(sizeBefore + loaded);\r\n    }\r\n    _shouldDoResumable(blob) {\r\n        return blob.size() > 256 * 1024;\r\n    }\r\n    _start() {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    }\r\n    _resolveToken(callback) {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            switch (this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    // TODO(andysoto): assert false\r\n    _createResumable() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = createResumableUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const createRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = createRequest;\r\n            createRequest.getPromise().then((url) => {\r\n                this._request = undefined;\r\n                this._uploadUrl = url;\r\n                this._needToFetchStatus = false;\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _fetchStatus() {\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getResumableUploadStatus(this._ref.storage, this._ref._location, url, this._blob);\r\n            const statusRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = statusRequest;\r\n            statusRequest.getPromise().then(status => {\r\n                status = status;\r\n                this._request = undefined;\r\n                this._updateProgress(status.current);\r\n                this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    this._needToFetchMetadata = true;\r\n                }\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _continueUpload() {\r\n        const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        const status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            let requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(this._ref._location, this._ref.storage, url, this._blob, chunkSize, this._mappings, status, this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                this._error = e;\r\n                this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            const uploadRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = uploadRequest;\r\n            uploadRequest.getPromise().then((newStatus) => {\r\n                this._increaseMultiplier();\r\n                this._request = undefined;\r\n                this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    this._metadata = newStatus.metadata;\r\n                    this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    this.completeTransitions_();\r\n                }\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _increaseMultiplier() {\r\n        const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    }\r\n    _fetchMetadata() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getMetadata$2(this._ref.storage, this._ref._location, this._mappings);\r\n            const metadataRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._transition(\"success\" /* SUCCESS */);\r\n            }, this._metadataErrorHandler);\r\n        });\r\n    }\r\n    _oneShotUpload() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = multipartUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const multipartRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._updateProgress(this._blob.size());\r\n                this._transition(\"success\" /* SUCCESS */);\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _updateProgress(transferred) {\r\n        const old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    }\r\n    _transition(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                const wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    }\r\n    completeTransitions_() {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * A snapshot of the current task state.\r\n     */\r\n    get snapshot() {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        return {\r\n            bytesTransferred: this._transferred,\r\n            totalBytes: this._blob.size(),\r\n            state: externalState,\r\n            metadata: this._metadata,\r\n            task: this,\r\n            ref: this._ref\r\n        };\r\n    }\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `StorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    on(type, nextOrObserver, error, completed) {\r\n        const observer = new Observer(nextOrObserver || undefined, error || undefined, completed || undefined);\r\n        this._addObserver(observer);\r\n        return () => {\r\n            this._removeObserver(observer);\r\n        };\r\n    }\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    then(onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    }\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    catch(onRejected) {\r\n        return this.then(null, onRejected);\r\n    }\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    _addObserver(observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    }\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    _removeObserver(observer) {\r\n        const i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    }\r\n    _notifyObservers() {\r\n        this._finishPromise();\r\n        const observers = this._observers.slice();\r\n        observers.forEach(observer => {\r\n            this._notifyObserver(observer);\r\n        });\r\n    }\r\n    _finishPromise() {\r\n        if (this._resolve !== undefined) {\r\n            let triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    const toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    }\r\n    _notifyObserver(observer) {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    resume() {\r\n        const valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    pause() {\r\n        const valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    cancel() {\r\n        const valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nclass Reference {\r\n    constructor(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    toString() {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    }\r\n    _newRef(service, location) {\r\n        return new Reference(service, location);\r\n    }\r\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\r\n    get root() {\r\n        const location = new Location(this._location.bucket, '');\r\n        return this._newRef(this._service, location);\r\n    }\r\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\r\n    get bucket() {\r\n        return this._location.bucket;\r\n    }\r\n    /**\r\n     * The full path of this object.\r\n     */\r\n    get fullPath() {\r\n        return this._location.path;\r\n    }\r\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\r\n    get name() {\r\n        return lastComponent(this._location.path);\r\n    }\r\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\r\n    get storage() {\r\n        return this._service;\r\n    }\r\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\r\n    get parent() {\r\n        const newPath = parent(this._location.path);\r\n        if (newPath === null) {\r\n            return null;\r\n        }\r\n        const location = new Location(this._location.bucket, newPath);\r\n        return new Reference(this._service, location);\r\n    }\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    _throwIfRoot(name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */\r\nfunction getBytesInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBytes');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBytesConnection)\r\n        .then(bytes => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            bytes.slice(0, maxDownloadSizeBytes)\r\n        : bytes);\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */\r\nfunction getBlobInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBlob');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBlobConnection)\r\n        .then(blob => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            blob.slice(0, maxDownloadSizeBytes)\r\n        : blob);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytes');\r\n    const requestInfo = multipartUpload(ref.storage, ref._location, getMappings(), new FbsBlob(data, true), metadata);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(finalMetadata => {\r\n        return {\r\n            metadata: finalMetadata,\r\n            ref\r\n        };\r\n    });\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString$1(ref, value, format = StringFormat.RAW, metadata) {\r\n    ref._throwIfRoot('uploadString');\r\n    const data = dataFromString(format, value);\r\n    const metadataClone = Object.assign({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return uploadBytes$1(ref, data.data, metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    const accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(() => accumulator);\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nasync function listAllHelper(ref, accumulator, pageToken) {\r\n    const opt = {\r\n        // maxResults is 1000 by default.\r\n        pageToken\r\n    };\r\n    const nextPage = await list$1(ref, opt);\r\n    accumulator.prefixes.push(...nextPage.prefixes);\r\n    accumulator.items.push(...nextPage.items);\r\n    if (nextPage.nextPageToken != null) {\r\n        await listAllHelper(ref, accumulator, nextPage.nextPageToken);\r\n    }\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    if (options != null) {\r\n        if (typeof options.maxResults === 'number') {\r\n            validateNumber('options.maxResults', \r\n            /* minValue= */ 1, \r\n            /* maxValue= */ 1000, options.maxResults);\r\n        }\r\n    }\r\n    const op = options || {};\r\n    const requestInfo = list$2(ref.storage, ref._location, \r\n    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    ref._throwIfRoot('getMetadata');\r\n    const requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    ref._throwIfRoot('updateMetadata');\r\n    const requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    ref._throwIfRoot('getDownloadURL');\r\n    const requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(url => {\r\n        if (url === null) {\r\n            throw noDownloadURL();\r\n        }\r\n        return url;\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    ref._throwIfRoot('deleteObject');\r\n    const requestInfo = deleteObject$2(ref.storage, ref._location);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    const newPath = child(ref._location.path, childPath);\r\n    const location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        const service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        const reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    const bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options = {}) {\r\n    storage.host = `${host}:${port}`;\r\n    storage._protocol = 'http';\r\n    const { mockUserToken } = options;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */\r\nclass FirebaseStorageImpl {\r\n    constructor(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._protocol = 'https';\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The host string for this service, in the form of `host` or\r\n     * `host:port`.\r\n     */\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(host) {\r\n        this._host = host;\r\n        if (this._url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\r\n    get maxUploadRetryTime() {\r\n        return this._maxUploadRetryTime;\r\n    }\r\n    set maxUploadRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxUploadRetryTime = time;\r\n    }\r\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\r\n    get maxOperationRetryTime() {\r\n        return this._maxOperationRetryTime;\r\n    }\r\n    set maxOperationRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxOperationRetryTime = time;\r\n    }\r\n    async _getAuthToken() {\r\n        if (this._overrideAuthToken) {\r\n            return this._overrideAuthToken;\r\n        }\r\n        const auth = this._authProvider.getImmediate({ optional: true });\r\n        if (auth) {\r\n            const tokenData = await auth.getToken();\r\n            if (tokenData !== null) {\r\n                return tokenData.accessToken;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async _getAppCheckToken() {\r\n        const appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n        if (appCheck) {\r\n            const result = await appCheck.getToken();\r\n            // TODO: What do we want to do if there is an error getting the token?\r\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n            // the token (actual or dummy) to send requests.\r\n            return result.token;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    _delete() {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(request => request.cancel());\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    _makeStorageReference(loc) {\r\n        return new Reference(this, loc);\r\n    }\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    _makeRequest(requestInfo, requestFactory, authToken, appCheckToken) {\r\n        if (!this._deleted) {\r\n            const request = makeRequest(requestInfo, this._appId, authToken, appCheckToken, requestFactory, this._firebaseVersion);\r\n            this._requests.add(request);\r\n            // Request removes itself from set when complete.\r\n            request.getPromise().then(() => this._requests.delete(request), () => this._requests.delete(request));\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    }\r\n    async makeRequestWithTokens(requestInfo, requestFactory) {\r\n        const [authToken, appCheckToken] = await Promise.all([\r\n            this._getAuthToken(),\r\n            this._getAppCheckToken()\r\n        ]);\r\n        return this._makeRequest(requestInfo, requestFactory, authToken, appCheckToken).getPromise();\r\n    }\r\n}\n\nconst name = \"@firebase/storage\";\nconst version = \"0.9.9\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nconst STORAGE_TYPE = 'storage';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */\r\nfunction getBytes(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBytesInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytes$1(ref, data, metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadString$1(ref, value, format, metadata);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */\r\nfunction getStorage(app = getApp(), bucketUrl) {\r\n    app = getModularInstance(app);\r\n    const storageProvider = _getProvider(app, STORAGE_TYPE);\r\n    const storageInstance = storageProvider.getImmediate({\r\n        identifier: bucketUrl\r\n    });\r\n    return storageInstance;\r\n}\r\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options = {}) {\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */\r\nfunction getBlob(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBlobInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */\r\nfunction getStream(ref, maxDownloadSizeBytes) {\r\n    throw new Error('getStream() is only supported by NodeJS builds');\r\n}\n\n/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */\r\nfunction factory(container, { instanceIdentifier: url }) {\r\n    const app = container.getProvider('app').getImmediate();\r\n    const authProvider = container.getProvider('auth-internal');\r\n    const appCheckProvider = container.getProvider('app-check-internal');\r\n    return new FirebaseStorageImpl(app, authProvider, appCheckProvider, url, SDK_VERSION);\r\n}\r\nfunction registerStorage() {\r\n    _registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\r\n    registerVersion(name, version, '');\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\r\nregisterStorage();\n\nexport { StringFormat, FbsBlob as _FbsBlob, Location as _Location, TaskEvent as _TaskEvent, TaskState as _TaskState, UploadTask as _UploadTask, dataFromString as _dataFromString, _getChild, invalidArgument as _invalidArgument, invalidRootOperation as _invalidRootOperation, connectStorageEmulator, deleteObject, getBlob, getBytes, getDownloadURL, getMetadata, getStorage, getStream, list, listAll, ref, updateMetadata, uploadBytes, uploadBytesResumable, uploadString };\n","export * from '@firebase/storage';\n"],"names":["Injectable","Router","Storage","Filesystem","NgxImageCompressService","ErrorHandlerService","getDownloadURL","getStorage","ref","uploadBytes","uploadBytesResumable","uploadString","ImageUploaderService","constructor","router","error","imageCompress","uploadFile","folder","filename","file","progressState","Promise","resolve","reject","storage","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","console","log","code","message","handle","then","downloadURL","url","uploadBase64","base64","catch","savePictures","photos","data","route","type","pdfName","pdf","set","key","PHOTO_STORAGE","value","JSON","stringify","deletePicture","photo","undefined","done","loadSaved","photoList","get","parse","length","deploy","i","contents","readFile","path","webPath","generateBlob","setTimeout","dataURLtoFile","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","getBase64Size","calculateImageSize","size","e","base64String","padding","inBytes","base64StringLength","endsWith","kbytes","reduceImageSize","oriented","imgResultBeforeCompress","warn","byteCount","compressFile","result","imgResultAfterCompress","base64Data","Date","toString","savedImageFile","newSize","compressImageFile","providedIn","Component","AttachmentsService","ManagerPage","images","ngOnInit","checkSavedImages","navigateByUrl","substring","selector","template","Capacitor","ActionSheetController","Chooser","Camera","CameraDirection","CameraResultType","CameraSource","AlertsService","documents","alerts","processor","actionSheetController","text","icon","handler","getCameraImage","image","push","getGalleryImage","pickPdf","PDF","role","dismiss","CameraButton","GalleryButton","CancelButton","PDFButton","presentImageOptions","options","imgHeight","height","imgWidth","width","limit","currentRoute","buttons","pdfButtons","cameraButtons","actionSheet","create","header","present","onDidDismiss","OPTIONS","source","direction","Rear","resultType","Base64","quality","saveToGallery","allowEditing","promptLabelCancel","getPhoto","capturedPhoto","img","pickImages","capturedPhotos","saveGallery","getPlatform","AlertConfirm","answer","DemoPDF","getFile","dataURI","name","forEach","registerPlugin","web","m","CameraWeb","Directory","Encoding","FilesystemDirectory","FilesystemEncoding","FilesystemWeb","StorageWeb","getApp","_getProvider","_registerComponent","registerVersion","SDK_VERSION","FirebaseError","createMockUserToken","getModularInstance","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","StorageError","prependCode","customData","serverResponse","_baseMessage","Object","setPrototypeOf","prototype","_codeEquals","unknown","objectNotFound","quotaExceeded","bucket","unauthenticated","unauthorizedApp","unauthorized","retryLimitExceeded","canceled","invalidUrl","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","invalidFormat","format","internalError","Location","path_","isRoot","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","host","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","decodeURIComponent","version","firebaseStorageHost","replace","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","FailRequest","promise_","getPromise","cancel","_appDelete","start","f","callback","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","apply","callWithDelay","millis","clearGlobalTimeout","clearTimeout","success","call","mustStop","waitMillis","Math","random","stopped","stop","wasTimeout","id","isJustDef","p","isFunction","isNonArrayObject","Array","isArray","isString","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","hasOwnProperty","nextPart","ErrorCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","pendingConnection_","backoffId_","canceled_","appDelete_","resolve_","reject_","start_","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","status","getStatus","isRetryStatusCode_","wasCanceled","ABORT","successCode","indexOf","backoffDone","requestWentThrough","wasSuccessCode","getResponse","err","getErrorText","appDelete","abort","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","headers","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","addAppCheckHeader_","appCheckToken","makeRequest","requestInfo","requestFactory","urlParams","assign","method","body","successCodes","additionalRetryCodes","errorHandler","progressCallback","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob$1","bb","append","getBlob","sliceBlob","blob","end","webkitSlice","mozSlice","decodeBase64","encoded","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","b","c","valid","hi","lo","percentEncodedBytes_","decoded","hasMinus","hasUnder","invalidChar","hasPlus","hasSlash","bytes","array","DataURLParts","dataURL","matches","middle","rest","dataUrl","parts","s","longEnough","FbsBlob","elideCopy","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","uint8Arrays","finalLength","merged","index","uploadData","jsonObjectOrNull","obj","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","filter","component","join","lastComponent","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","Number","sizeMapping","addRef","service","generateRef","_makeStorageReference","defineProperty","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","fromResponseString","RequestInfo","handlerCheck","cndn","metadataHandler","xhr","listHandler","downloadUrlHandler","_protocol","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","getMetadata$2","maxOperationRetryTime","list$2","delimiter","pageToken","maxResults","getBytes$1","maxDownloadSizeBytes","_","getDownloadUrl","updateMetadata$2","deleteObject$2","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","multipartUpload","genBoundary","str","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","getResponseHeader","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","Observer","nextOrObserver","complete","asFunctions","next","observer","async","argsToForward","textFactoryOverride","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","response","statusText","listener","upload","removeEventListener","XhrTextConnection","responseType","newTextConnection","XhrBytesConnection","newBytesConnection","XhrBlobConnection","newBlobConnection","UploadTask","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","_getAuthToken","_getAppCheckToken","_location","createRequest","_makeRequest","statusRequest","uploadRequest","newStatus","_increaseMultiplier","currentSize","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","task","completed","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_finishPromise","observers","triggered","bind","toCall","resume","pause","Reference","_service","_newRef","root","_throwIfRoot","getBytesInternal","makeRequestWithTokens","getBlobInternal","uploadBytes$1","finalMetadata","uploadBytesResumable$1","uploadString$1","listAll$1","accumulator","listAllHelper","opt","nextPage","list$1","op","getMetadata$1","updateMetadata$1","getDownloadURL$1","deleteObject$1","_getChild$1","isUrl","test","refFromURL","refFromPath","FirebaseStorageImpl","_bucket","ref$1","serviceOrRef","pathOrUrl","extractBucket","config","connectStorageEmulator$1","port","mockUserToken","_overrideAuthToken","app","projectId","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","getImmediate","optional","tokenData","getToken","accessToken","appCheck","_delete","request","clear","add","delete","STORAGE_TYPE","getBytes","getMetadata","updateMetadata","list","listAll","deleteObject","_getChild","bucketUrl","storageProvider","storageInstance","identifier","connectStorageEmulator","getStream","Error","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","registerStorage","setMultipleInstances","_FbsBlob","_Location","_TaskEvent","_TaskState","_UploadTask","_dataFromString","_invalidArgument","_invalidRootOperation"],"sourceRoot":"webpack:///"}